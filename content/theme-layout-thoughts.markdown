Title: Initial layout thoughts
Category: blog
Tags: pelican, blogging, theming, tools
Summary: Some initial stabs at what this blog should look like, plus some new tool usage
Status: draft

I need a layout. The first thing is read over the [Bootstrap](http://getbootstrap.com/css/) docs to refresh my memory on its visual components. I sling a few HTML elements and CSS rules around. And then I step back.

Gross. This isn't working. I need to figure all the blog parts and how they should fit together before I start writing actual HTML. I'm having trouble visualizing it otherwise.

Normally I would draw something quick on paper but this is a dev log; the whole point is to show my work! Drawing on a laptop touchpad is a no-go so I look around for paint programs I can use on a tablet. Turns out [Pixelmator](http://www.pixelmator.com/mac/) fits the bill as there's both an iOS and OS X version, making it easy to move sketches around.

I'm not looking to create anything fancy; a two column layout with content on the left and navigation/links on the right. This is pretty easy in Bootstrap so I'm not too worried. The bigger question at the moment is cataloguing all the Pelican features and deciding how they fit together. In addition there's two flags I'd like the theme to pay attention to: `DISPLAY_PAGES_ON_MENU` and `DISPLAY_CATEGORIES_ON_MENU`. This means a design that can include or exclude page and category links without looking janky.

My initial attempt:

<a href="{filename}/images/2015-12/initial-index-layout.png" title="Initial index layout">
	<img src="{filename}/images/2015-12/initial-index-layout-t.png" alt="Initial index layout">
</a>

It's a rough sketch! Done on an iPad with my finger! Judge not. That weird block in the upper-right is an RSS/ATOM feed icon in case you're wondering. Overall the iOS drawing worked out fine though I'll probably rely on fewer text elements to fill out space in the future as they're awfully fiddly on a touch screen. I briefly considered getting a stylus but surveying the results on Amazon led to a field of broken dreams, so touch-drawing it is.

The left-hand column is where content will go. The latest blog post will be shown in full, the rest will be summaries, and pagination controls fill out the column. The right-hand column is all navigation and other various links. "categories", "tags", and "archives" are all generated by Pelican. "pages" includes about me, etc while "social" and "links" are the `SOCIAL` and `LINKS` settings in **pelicanconf.py** respectively. This is a layout diagram only so no visual elements described. I'll figure that out later.

One side-effect I did *not* anticipate was the retina screen factor. I created thumbnail and full-size images in Pixelmator, linked them into the blog post, and tested in a browser... it looked *terrible*. Turns out Pixelmator displays the image in actual pixels, but everything else will scale up by a factor of two for the retina resolution. Every image I sized ended up twice as large in the browser and the compression made everything look like garbage. So scale everything to half what I want visually and make sure it looks ok at 200% size. There's other CSS tricks to make this work better with 2x images but these rough sketches aren't worth it.

Anyway the upshot is I have a visualization to which I'm working towards in HTML. The exercise did raise some questions:

- I'll have to play with the order of right-hand nav once I get something rendering. I'm not sure what the user will find most relevant and it will be tough to judge until I can see it in-browser.
- Most Pelican themes list additional blog posts inline with the rest of the content and that's what I've drawn here but I don't like the look much. I may swing older posts into the nav bar but that poses questions on how the pagination would work visually.
- For a single article page I'd like to show related blog posts, ordered by tags. Some sort of sorted intersection of tags across all articles should work, but I'm not sure I have that level of control in Jinja.
- The current image linking is ugly: I'm going to pull in [Colorbox](http://www.jacklmoore.com/colorbox/) to do the visual display.

The index template will inform all the other pages on the blog. I'm anticipating that every page will look more or less like this one other than the content column. Next time we'll talk HTML.
