<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dev Log and also other Blog Stuff too</title><link href="http://drmonkeysee.github.io/" rel="alternate"></link><link href="http://drmonkeysee.github.io/feeds/blog.atom.xml" rel="self"></link><id>http://drmonkeysee.github.io/</id><updated>2015-12-11T22:01:23-08:00</updated><entry><title>Pelican blog setup</title><link href="http://drmonkeysee.github.io/blog/2015/12/11/setup-pelican-blog" rel="alternate"></link><updated>2015-12-11T22:01:23-08:00</updated><author><name>Brandon Stansbury</name></author><id>tag:drmonkeysee.github.io,2015-12-11:blog/2015/12/11/setup-pelican-blog</id><summary type="html">&lt;p&gt;How did I set up this blog? Let's find out.&lt;/p&gt;
&lt;p&gt;First, I followed a &lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;couple&lt;/a&gt; &lt;a href="http://ntanjerome.org/blog/how-to-setup-github-user-page-with-pelican/"&gt;handy&lt;/a&gt; &lt;a href="https://fedoramagazine.org/make-github-pages-blog-with-pelican/"&gt;guides&lt;/a&gt;. I encourage everyone to go check them out, but I found they were slightly out of date with the latest version of Pelican so I'll document my own setup process here. Maybe someday this too will be a handy guide.&lt;/p&gt;
&lt;h2&gt;Hosting on GitHub Pages&lt;/h2&gt;
&lt;p&gt;I already have a GitHub account so it's a natural fit to host my blog on GitHub Pages, especially given this is primarily about stuff in said GitHub account. GitHub Pages provides a location to host a static site. The emphasis is on &lt;em&gt;static&lt;/em&gt; site; there is no server-side framework so my blog must be made up of HTML, CSS, and JavaScript files. Which is just fine by me. I have a lot of experience with server-side web frameworks and there's very little reason why a blog needs that horsepower (I'm sure the people at &lt;a href="http://www.squarespace.com"&gt;Squarespace&lt;/a&gt; are very nice). Also hosting on GitHub Pages allows me to write and publish with the same programming workflow I'm already used to instead of relying on a weird web editor or something. A static site generator will fit the bill nicely but we'll get to that later.&lt;/p&gt;
&lt;p&gt;Starting at my &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; account I head over to the &lt;a href="https://pages.github.com"&gt;GitHub Pages documentation&lt;/a&gt; and follow the instructions to set up a "User or organization site". At the end of it I have a new repository: &lt;code&gt;drmonkeysee.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Does the hosting work?&lt;/h2&gt;
&lt;p&gt;Let's find out if this hosting is up-to-snuff. First thing, clone the repository locally and create a simple index page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone git@github.com:drmonkeysee/drmonkeysee.github.io.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;drmonkeysee.github.io
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Watch this space...&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot;&lt;/span&gt; &amp;gt; index.html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I'm cheating a little here as I actually used vim to create a valid HTML5 page but that's harder to show than a single &lt;code&gt;echo&lt;/code&gt; line. I'm sure you can imagine it. Now we commit the file and push to the remote origin on GitHub:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git add index.html
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;Test hosting&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Opening a browser and navigating to &lt;code&gt;http://drmonkeysee.github.io/&lt;/code&gt; we see a live site. Times New Roman on a white background, party like it's 1996!&lt;/p&gt;
&lt;h2&gt;Enter Pelican&lt;/h2&gt;
&lt;p&gt;That was pretty easy but we're gonna hit a wall real fast writing a blog with &lt;code&gt;echo&lt;/code&gt;. We want to compose our entries in a nice text editor like a civilized person. It's the 21st century so we shouldn't need to put up with HTML either, opting for a cleaner syntax like &lt;a href="https://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; or &lt;a href="http://docutils.sourceforge.net/rst.html"&gt;reST&lt;/a&gt;. Static-site generators will do the heavy lifting for us. GitHub Pages recommends &lt;a href="http://jekyllrb.com"&gt;Jekyll&lt;/a&gt; but I'm gonna use &lt;a href="http://docs.getpelican.com/en/3.6.3/"&gt;Pelican&lt;/a&gt; as I like Python more than Ruby.&lt;/p&gt;
&lt;p&gt;Our site will be hosted from the &lt;code&gt;master&lt;/code&gt; branch. Anything that's not part of our site therefore needs to live in a different branch, otherwise source code, configuration files, readmes, what-have-you will all be served to the public web. That would be a mess. So we'll create a &lt;code&gt;source&lt;/code&gt; branch for our development environment.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout -b &lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Everything we write including Pelican-related code, blog entry text files, and themes will live in the &lt;code&gt;source&lt;/code&gt; branch and the auto-generated output of Pelican will live in the &lt;code&gt;master&lt;/code&gt; branch. As we will see, Pelican makes this super easy. Some of the handy guides suggest keeping the blog source code in a separate repository and only putting deployed site content into the blog repo, or creating a third branch, &lt;code&gt;gh-pages&lt;/code&gt;, that would temporarily contain the published content before merging to &lt;code&gt;master&lt;/code&gt;. This was probably a reasonable approach with earlier versions of Pelican but these days it supports publishing from an arbitrary branch so we can keep things nice and simple.&lt;/p&gt;
&lt;p&gt;I already have Python 3.5 installed (don't let anyone tell you to settle for 2.7) so we can jump right into setting up Pelican. To keep things tidy we'll create a &lt;a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/"&gt;virtual environment&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pyvenv venv
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source &lt;/span&gt;venv/bin/activate
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install pelican Markdown ghp-import
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This installs pelican for obvious reasons, markdown so we can write blog posts in markdown, and ghp-import so we can publish to GitHub Pages. The next step is run the quickstart script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pelican-quickstart
...
&amp;gt; Where &lt;span class="k"&gt;do&lt;/span&gt; you want to create your new web site? &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt; 
&amp;gt; What will be the title of this web site? Dev Log and also other Blog Stuff too
&amp;gt; Who will be the author of this web site? Brandon Stansbury
&amp;gt; What will be the default language of this web site? &lt;span class="o"&gt;[&lt;/span&gt;en&lt;span class="o"&gt;]&lt;/span&gt; 
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; What is your URL prefix? &lt;span class="o"&gt;(&lt;/span&gt;see above example&lt;span class="p"&gt;;&lt;/span&gt; no trailing slash&lt;span class="o"&gt;)&lt;/span&gt; http://drmonkeysee.github.io       
&amp;gt; Do you want to &lt;span class="nb"&gt;enable &lt;/span&gt;article pagination? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt;  
&amp;gt; How many articles per page &lt;span class="k"&gt;do&lt;/span&gt; you want? &lt;span class="o"&gt;[&lt;/span&gt;10&lt;span class="o"&gt;]&lt;/span&gt; 
&amp;gt; What is your &lt;span class="nb"&gt;time &lt;/span&gt;zone? &lt;span class="o"&gt;[&lt;/span&gt;Europe/Paris&lt;span class="o"&gt;]&lt;/span&gt; America/Los_Angeles
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want an auto-reload &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; simpleHTTP script to assist with theme and site development? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using FTP? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using SSH? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using Dropbox? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using S3? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using GitHub Pages? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; y
&amp;gt; Is this your personal page &lt;span class="o"&gt;(&lt;/span&gt;username.github.io&lt;span class="o"&gt;)&lt;/span&gt;? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; y
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pelican creates a bunch of files and we're ready to rock. The questions are pretty straightforward but note that I've asked for a Fabfile/Makefile and an auto-reload script. The combination of the two allows us to run several handy Pelican commands including local hosting for development and publishing to our remote master branch.&lt;/p&gt;
&lt;p&gt;Time zone stymied me for a moment. Like any good developer I have a sextant and stable pendulum so I know what time zone I'm in but it was unclear what format Pelican expected. Is it PST? US/Pacific? What if I get it wrong? Turns out this ends up in a config file so it's easy to fix later but Pelican is expecting the tz  name listed in &lt;a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"&gt;this table&lt;/a&gt;. Now you know.&lt;/p&gt;
&lt;p&gt;So we have an empty Pelican site and a bunch of auto-generated scripts. Head over to the &lt;a href="https://github.com/github/gitignore"&gt;gitignore repo&lt;/a&gt;, grab the Python template, add &lt;strong&gt;venv/&lt;/strong&gt; and &lt;strong&gt;output/&lt;/strong&gt; to the ignore list, and commit everything into the &lt;code&gt;source&lt;/code&gt; branch. Now we write a hello world post, get bored, and never write anything again!&lt;/p&gt;
&lt;p&gt;Next time we'll tackle writing and publishing the first blog entry, as well as blog configuration.&lt;/p&gt;</summary><category term="pelican"></category><category term="blogging"></category></entry><entry><title>Theme Shopping</title><link href="http://drmonkeysee.github.io/blog/2015/12/05/theme-shopping" rel="alternate"></link><updated>2015-12-05T20:47:19-08:00</updated><author><name>Brandon Stansbury</name></author><id>tag:drmonkeysee.github.io,2015-12-05:blog/2015/12/05/theme-shopping</id><summary type="html">&lt;p&gt;I've settled on a url scheme and other random settings so the time has come to shop for a theme. I popped over to &lt;a href="https://github.com/getpelican/pelican-themes"&gt;pelican-themes&lt;/a&gt; and... frankly... not crazy about what's on offer.&lt;/p&gt;
&lt;p&gt;Don't get me wrong, the craftsmanship on display is fine, but none of them grab me. However the pelican-bootstrap3 theme points a way forward. What if I just built my own theme on top of bootstrap? Follow up question: why don't I just use pelican-bootstrap3?&lt;/p&gt;
&lt;p&gt;In short: I want control. The pelican-bootstrap3 theme contains the contents of bootstrap3 inline instead of pulling it in from a CDN, which adds a maintenance burden keeping everything up-to-date with official release channels. I'm one of those devs that likes to sit on the latest versions as seamlessly as possible and cleaning up someone else's theme to square it away to my satisfaction sounds less fun than just writing it myself.&lt;/p&gt;
&lt;p&gt;So why not? Well it means this blog is gonna look pretty entry-level for longer than I wanted. On the other hand I control the blog from the ground up and might as well learn &lt;a href="http://jinja.pocoo.org"&gt;Jinja&lt;/a&gt; while I'm here. As will become evident in later entries much of my hobby work is about building stuff from scratch so carrying that philosophy forward to my dev log seems a natural fit.&lt;/p&gt;</summary><category term="pelican"></category><category term="blogging"></category></entry><entry><title>Hello Published!</title><link href="http://drmonkeysee.github.io/blog/2015/12/04/hello-published" rel="alternate"></link><updated>2015-12-04T00:00:00-08:00</updated><author><name>Brandon Stansbury</name></author><id>tag:drmonkeysee.github.io,2015-12-04:blog/2015/12/04/hello-published</id><summary type="html">&lt;p&gt;After fiddling with lots of settings and url schemes publishing was &lt;strong&gt;super&lt;/strong&gt; easy! Turns out the current version of Pelican (3.6.3 as of this writing) auto-generates github page scripts so one &lt;code&gt;make github&lt;/code&gt; call later and *POOF* my dev log is a real boy.&lt;/p&gt;
&lt;p&gt;At the moment I'm still running on the built-in theme so I to need fix that. You may notice the author link doesn't go anywhere. I'm the only author but the theme is stubbornly insisting on linking to it anyway. I gotta do some other spicing up like a fancy favicon or something.&lt;/p&gt;
&lt;p&gt;As for plugins, hopefully there's something that sets meta tags. All the cool kids have meta tags these days. And GitHub-style code blocks. Oh, looks like the default settings already have that:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a fancy blog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Also I haven't picked a license yet so... uh... no one steal anything in the meantime! Next step: make this blog post obsolete by changing everything about how the blog works.&lt;/p&gt;</summary><category term="pelican"></category><category term="blogging"></category></entry><entry><title>Hello World</title><link href="http://drmonkeysee.github.io/blog/2015/12/04/hello-world" rel="alternate"></link><updated>2015-12-04T00:00:00-08:00</updated><author><name>Brandon Stansbury</name></author><id>tag:drmonkeysee.github.io,2015-12-04:blog/2015/12/04/hello-world</id><summary type="html">&lt;p&gt;In the finest tradition of new projects this is the hello world post for my dev log aka blog of other stuff too. The intent here is to document my work on various projects on my Github account, so naturally the log itself should &lt;em&gt;also&lt;/em&gt; be a project on my Github account. And here we are.&lt;/p&gt;
&lt;p&gt;This first entry is a test of the publishing system itself and I imagine I'll be tweaking it a bit before it actually shows up live anywhere. The breakdown: I'm using &lt;a href="http://docs.getpelican.com/en/3.6.3/index.html"&gt;Pelican&lt;/a&gt; as the blog publisher and generally following &lt;a href="http://ntanjerome.org/blog/how-to-setup-github-user-page-with-pelican/"&gt;this guide&lt;/a&gt; to get it all working. A nice surprise, the latest version of Pelican seems to support Github pages publishing directly so I may not need the branch-dance documented in the guide. I'm also checking &lt;a href="http://mathamy.com"&gt;mathamy&lt;/a&gt; and &lt;a href="http://eev.ee"&gt;fuzzy notepad&lt;/a&gt; as a guide for organization. If it all works out my next entry will probably detail exactly how I got this blog set up.&lt;/p&gt;
&lt;p&gt;Things I need to figure out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;themes&lt;/li&gt;
&lt;li&gt;plugins I may want&lt;/li&gt;
&lt;li&gt;different sections n' stuff for the site&lt;/li&gt;
&lt;li&gt;what the heck are all the right settings&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Oh and licensing. I guess I need to figure out the right badges and social links and blahbeddyboo. Here we go!&lt;/p&gt;</summary><category term="pelican"></category><category term="blogging"></category></entry></feed>